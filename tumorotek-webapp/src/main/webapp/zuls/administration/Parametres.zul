<!--
 * Copyright ou © ou Copr. Ministère de la santé, FRANCE (01/01/2011)
 * dsi-projet.tk@aphp.fr
 *
 * Ce logiciel est un programme informatique servant à la gestion de
 * l'activité de biobanques.
 *
 * Ce logiciel est régi par la licence CeCILL soumise au droit français
 * et respectant les principes de diffusion des logiciels libres. Vous
 * pouvez utiliser, modifier et/ou redistribuer ce programme sous les
 * conditions de la licence CeCILL telle que diffusée par le CEA, le
 * CNRS et l'INRIA sur le site "http://www.cecill.info".
 * En contrepartie de l'accessibilité au code source et des droits de
 * copie, de modification et de redistribution accordés par cette
 * licence, il n'est offert aux utilisateurs qu'une garantie limitée.
 * Pour les mêmes raisons, seule une responsabilité restreinte pèse sur
 * l'auteur du programme, le titulaire des droits patrimoniaux et les
 * concédants successifs.
 *
 * A cet égard  l'attention de l'utilisateur est attirée sur les
 * risques associés au chargement,  à l'utilisation,  à la modification
 * et/ou au  développement et à la reproduction du logiciel par
 * l'utilisateur étant donné sa spécificité de logiciel libre, qui peut
 * le rendre complexe à manipuler et qui le réserve donc à des
 * développeurs et des professionnels  avertis possédant  des
 * connaissances  informatiques approfondies.  Les utilisateurs sont
 * donc invités à charger  et  tester  l'adéquation  du logiciel à leurs
 * besoins dans des conditions permettant d'assurer la sécurité de leurs
 * systèmes et ou de leurs données et, plus généralement, à l'utiliser
 * et l'exploiter dans les mêmes conditions de sécurité.
 *
 * Le fait que vous puissiez accéder à cet en-tête signifie que vous
 * avez pris connaissance de la licence CeCILL, et que vous en avez
 * accepté les termes.
-->
<window id="fwinParametres" width="100%" height="auto"  minimizable="false"
        maximizable="false"
        apply="org.zkoss.bind.BindComposer"
        viewModel="@id('vm') @init('fr.aphp.tumorotek.action.administration.ParametresController')">

    <!--       Paramètres pour toutes les plateformes     -->

    <panel collapsible="false" title="${c:l('params.application.title')}"
           sclass="fichePanelv2" closable="false">
        <panelchildren id="panelChildrenWithScroll">
            <grid fixedLayout="true" sclass="gridForm1">
                <columns>
                    <column width="30%"/>
                    <column width="40%"/>
                    <column/>
                </columns>

                <rows>
                    <group label="${c:l('params.toutes.plateformes.title')}" id="toutesPlateformes" />

                    <!--
                                      Première ligne: Image de bienvenue.
                                  -->
                    <row>
                        <!-- Cellule pour le libellé de l'image. -->
                        <cell>
                            <label value="${c:l('params.logo.accueil')}" sclass="formLabel" style="color: #636363;"/>
                        </cell>
                        <!-- Cellule pour afficher l'image de bienvenue ou un message si elle n'existe pas. -->
                        <cell>
                            <image visible="@load(vm.welcomeImageExists)" style="width: 50px; height: 50px"
                                   content="@load(vm.welcomeImage)"/>

                            <label visible="@load(!vm.welcomeImageExists)" value="${c:l('params.logo.empty')}"
                                   sclass="formValue"/>
                        </cell>
                        <!--
                          Cellule dédiée aux boutons d'édition et de suppression de l'image.
                          La suppression d'une image est possible uniquement si elle existe.
                          Par conséquent, le bouton de suppression est visible uniquement si une image existe ou a été téléchargée.
                      -->
                        <cell>
                            <button label="${c:l('general.edit')}"
                                    image="/images/icones/edit.png" sclass="buttonv2"
                                    onClick="@command('modifyWelcomeImage')"/>
                            <button visible="@load(vm.welcomeImageExists)"
                                    label="${c:l('general.delete')}"
                                    image="/images/icones/trash.png" sclass="buttonv2"
                                    onClick="@command('deleteWelcomeImage')"/>
                        </cell>
                    </row>

                    <!--
                                       Deuxième ligne: Message de bienvenue.
                                   -->
                    <row>
                        <!-- Cellule pour le libellé du message de bienvenue. -->
                        <cell>
                            <label value="${c:l('params.message.accueil')}" sclass="formLabel" style="color: #636363;"/>

                        </cell>
                        <!-- Cellule pour afficher le message de bienvenue au format HTML. -->
                        <cell>
                            <html sclass="formValue z-label" content="@load(vm.welcomeMessage)"/>
                        </cell>

                        <!-- Cellule pour les boutons d'édition et de suppression du message de bienvenue.
                         Le meme logique comme pour l'image-->
                        <cell>
                            <button label="${c:l('general.edit')}"
                                    image="/images/icones/edit.png" sclass="buttonv2"
                                    onClick="@command('modifyWelcomeMessage')"/>
                            <button visible="@load(vm.specificWelcomeMessageExists)"
                                    label="${c:l('general.reinit')}"
                                    image="/images/icones/trash.png" sclass="buttonv2"
                                    onClick="@command('reinitWelcomeMessage')"/>
                        </cell>
                    </row>
                    <group label="@load(vm.plateformeTitle)"  id="plateformeCourante"  style="padding-top:20px" />

                </rows>
            </grid>
        </panelchildren>
    </panel>

    <!--         Paramètres de la plateforme courante         -->


    <panel style="margin-top:10px">
        <panelchildren >
            <grid model="@load(vm.parametreDecorators)" sclass="gridForm1">
                <columns>
                    <column width="30%"/>
                    <column width="40%"/>
                    <column/>
                </columns>
                <template name="model">


                    <!-- Chaque ligne (row) représente un parametreDecorator -->
                    <row>
                        <!-- Première cellule: Afficher la clé du paramètre -->
                        <cell>
                            <label value="${each.libelleI18n}" sclass="formLabel" style="color: #636363;"/>
                        </cell>

                        <!-- Deuxième cellule: Afficher la valeur du paramètre en mode édition ou lecture -->
                        <cell>

                            <!-- Si en mode Lecture -->

                            <div if="${!each.editMode}">
                                <!-- Afficher l'étiquette si c'est une chaîne de caractères -->
                                <label if="${each.type ne 'Boolean'}" value="@load(each.parametre.valeur)" sclass="formValue"/>

                                <!-- Afficher l'étiquette i18n pour le Boolean -->
                                <label if="${each.type eq 'Boolean'}"
                                       value="@load(each.parametre.valeur ? c:l('general.checkbox.true') : c:l('general.checkbox.false'))"
                                       sclass="formValue"/>
                            </div>


                            <!-- Si en mode Edition -->

                            <div if="${each.editMode}">
                                <!-- Afficher les boutons radio 'oui' et 'non' si le type est 'Boolean' -->
                                <radiogroup if="${each.type eq 'Boolean'}"
                                            selectedItem="@load(each.parametre.valeur) @save(each.newValeur)">
                                    <radio label="${c:l('general.checkbox.true')}" value="true" style="margin-right: 25px;"/>
                                    <radio label="${c:l('general.checkbox.false')}" value="false" />
                                </radiogroup>

                                <!-- Afficher la zone de texte si c'est une chaîne de caractères -->
                                <textbox if="${each.type eq 'String'}"
                                         constraint="${each.constParametreValeur}"
                                         value="@load(each.parametre.valeur) @save(each.newValeur)"
                                         width="90%"/>

                                <!-- Afficher le champ numérique si c'est un nombre -->
                                <intbox  if="${each.type eq 'Integer'}"
                                        constraint="${each.constParametreValeur}"
                                        value="@load(each.parametre.valeur) @save(each.newValeur)"
                                        width="10%"/>
                            </div>

                        </cell>


                        <!-- Troisième cellule: Boutons pour éditer, enregistrer et annuler les modifications -->
                        <cell>
                            <!-- Bouton pour passer en mode édition si non en mode édition -->

                            <button label="${c:l('general.edit')}"
                                    onClick="@command('editParametre', parametreDecorator=each)"
                                    image="/images/icones/edit.png" sclass="buttonv2"
                                    visible="${each.displayModifierButton()}" />

                            <!-- Bouton pour enregistrer les modifications si en mode édition -->
                            <button label="${c:l('general.save')}"
                                    onClick="@command('saveParametre', parametreDecorator=each)"
                                    image="/images/icones/save.png" sclass="buttonv2"
                                    visible="${each.displayEnregistrerButton()}" />

                            <!-- Bouton pour annuler les modifications et sortir du mode édition -->
                            <button label="${c:l('general.cancel')}"
                                    onClick="@command('cancelEdit', parametreDecorator=each)"
                                    image="/images/icones/cancel.png" sclass="buttonv2"
                                    visible="${each.displayAnnulerButton()}" />

                            <!-- Bouton pour réinitialiser le paramètre à sa valeur par défaut -->
                            <button label="${c:l('general.reinit')}"
                                    onClick="@command('reinitParametre', parametreDecorator=each)"
                                    image="/images/icones/reset.png" sclass="buttonv2"
                                    visible="${each.displayReinitButton()}" />


                        </cell>

                    </row>


                </template>

            </grid>
        </panelchildren>
    </panel>
</window>
