<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:camel="http://camel.apache.org/schema/spring"
      xsi:schemaLocation="
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- global APIX error handling -->
	<errorHandler id="sglErrorHandler" xmlns="http://camel.apache.org/schema/spring"
		useOriginalMessage="true" type="DeadLetterChannel" deadLetterUri="{{sgl.deadLetter}}" >
<!--     	<redeliveryPolicy maximumRedeliveries="0" logHandled="true" asyncDelayedRedelivery="false" /> -->
	</errorHandler>

	<!-- view beans -->
    <!--  view source -->
    		<!-- class="org.apache.commons.dbcp.BasicDataSource" -->
<!-- 	<bean id="daVinciDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" -->
<!-- 			destroy-method="close"> -->
<!-- 		<property name="driverClass" value="com.mysql.jdbc.Driver" /> -->
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/davinci" /> -->
<!-- 		<property name="user" value="root" /> -->
<!-- 		<property name="password" value="root" /> -->
<!-- 	</bean> -->


	<!-- configure the Camel SQL component to use the JDBC data source -->
	<!-- 	<bean id="sqlComponent" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="sglViewSource" />
	</bean> -->
	<!-- end view config -->

    <routeContext id="sgl-routes" xmlns="http://camel.apache.org/schema/spring"> 
   
    	<route id="sgl1" autoStartup="{{sgl.startup}}" startupOrder="5">
	   		
	   		<from uri="{{sgl.startpoint}}" />
	   		<onException useOriginalMessage="true">
		        <exception>java.lang.Exception</exception>
<!--		        <redeliveryPolicy maximumRedeliveries="0" /> -->
		        <handled><constant>true</constant></handled>
		        <log logName="fr.aphp.tumorotek.interfacage.sgl.dead" message="Error handling file: ${file:name}" />
		        <to uri="bean:exceptionLogProcessor" />
				<to uri="{{sgl.deadLetter}}" />
		    </onException>
	   
	   		<choice>
	   			<when>
	   				<simple>${file:ext} == 'hl7'</simple>
	   				<convertBodyTo type="java.lang.String" />
	   				<!-- <unmarshal ref="myHl7"   /> -->
	   				<to uri="bean:sglHandler?method=handleMessageSGL" />
	   			</when>
	   			<otherwise>
	   				<stop />
	   			</otherwise>
	   		</choice>
	   	</route>
	   	
<!-- 	   	<route id="processView-route" autoStartup="{{sgl.view.startup}}"> -->
<!-- 	   		<from uri="direct:view-select" /> -->
<!-- 	   		<to uri="log:fr.aphp.tumorotek.interfacage.sgl?level=ERROR&amp;showBody=true" /> -->
<!-- 	   		<choice> -->
<!-- 	   		    <when>	   		    	 -->
<!-- 	   		        <simple>${header.sgl} == 'davinci'</simple> -->
	<!--	   		        <setHeader headerName="numDos"> -->
	<!-- 	   		           <constant>${body['numDos']}</constant> -->
	<!-- 	   		        </setHeader> -->
<!-- 	   		        <setBody> -->
<!--        					<simple>select * from TK_VIEW where NUM_DOS='${body['numDos']}' order by ID desc limit 0,1</simple> -->
<!--      				</setBody> -->
<!-- 	   		        <to uri="jdbc:daVinciDataSource" /> -->
<!-- 	   		        <split> -->
<!-- 						<simple>${body}</simple> -->
<!-- 						<to uri="bean:daVinciViewHandler?method=processResult" /> -->
<!-- 						<to uri="log:fr.aphp.tumorotek.interfacage.sgl?level=ERROR&amp;showBody=true" /> -->
<!-- 					</split> -->
<!-- 	   		    </when> -->
<!-- 	   		    <otherwise /> -->
<!-- 	   		</choice> -->
<!-- 		</route> -->
    </routeContext>
</beans>
